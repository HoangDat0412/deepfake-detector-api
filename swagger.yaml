openapi: 3.0.3
info:
  title: Swagger DeepFake Detector
  description: |-
    Xin chào

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11

servers:
  - url: http://117.1.29.215:5000
tags:
  - name: user
    description: Operations about user
  - name: typefile
    description: Có 3 kiểu dữ liệu là img,void,video chức năng của những api dưới đây là để lấy giá tiền của những kiểu dữ liệu và update giá tiền 
  - name: checkout
    description: operations about checkout
  - name: checkfile
    description: operations about checkfile
paths:
  /api/v1/deepfake_detector/user:
    post:
      tags:
        - user
      summary: Create user
      description: đăng ký tài khoản 
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: successful operation
    get: 
     tags:
        - user
     summary: Get All User
     description: Chỉ admin mới có quền get all users 
     operationId: getalluser
     security:
      - Bearer: []
     responses:
        default:
          description: successful operation
  /api/v1/deepfake_detector/user/login:
    post:
     tags:
        - user
     summary: Login 
     description: This can only be done by the logged in user.
     operationId: login
     requestBody:
        description: login user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLogin'
     responses:
        default:
          description: successful operation
  /api/v1/deepfake_detector/user/information:
    get:
     tags:
        - user
     summary: Get user information
     description: api để người dùng có thể lấy thông tin tài khoản của mình
     operationId: userinformation
     security:
      - Bearer: []
     responses:
        default:
          description: successful operation
  /api/v1/deepfake_detector/user/update/{userid}:
    post:
      tags:
        - user
      summary: admin update user
      description: This can only be done by the logged in user.
      operationId: updateuser
      security:
      - Bearer: []
      parameters:
        - name: id
          in: path
          description: id user need to update 
          required: true
          schema:
            type: integer      
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
                    type: object
                    properties:
                     name:
                      type: string
                      example: theUser
                     email:
                      type: string
                      example: john@email.com
      responses:
        default:
          description: successful operation
  /api/v1/deepfake_detector/user/{userid}:
    delete:
      tags:
        - user
      summary: Delete user
      description: admin xóa tài khoản người dùng 
      operationId: deleteUser
      security:
      - Bearer: []
      parameters:
        - name: userid
          in: path
          description: xóa người dùng có id 
          required: true
          schema:
            type: integer
      responses:
        '400':
          description: Invalid email supplied
        '404':
          description: User not found
  /api/v1/deepfake_detector/user/detail/{userid}:
    get:
     tags:
        - user
     summary: admin get user information
     description: api để admin có thể lấy thông tin tài khoản của người dùng
     operationId: admingetuserinformation
     parameters:
        - name: userid
          in: path
          description: id user need to update 
          required: true
          schema:
           type: integer      
     security:
      - Bearer: []
     responses:
        default:
          description: successful operation
  /api/v1/deepfake_detector/user/updateuser:
    post:
      tags:
        - user
      summary: update user information
      description: người dùng cập nhật lại thông tin tài khoản của họ 
      operationId: userupdateinformation
      security:
      - Bearer: []  
      requestBody:
        content:
          application/json:
            schema:
                    type: object
                    properties:
                     name:
                      type: string
                      example: theUser
                     email:
                      type: string
                      example: john@email.com
                     password:
                      type: string
                      example: "2011"
      responses:
        default:
          description: successful operation
  /api/v1/deepfake_detector/user/search:
    post:
      tags:
        - user
      summary: search user
      description: admin tìm kiếm người dùng bằng email
      operationId: searchuser
      security:
      - Bearer: []  
      requestBody:
        content:
          application/json:
            schema:
                    type: object
                    properties:
                     email:
                      type: string
                      example: john@email.com

      responses:
        default:
          description: successful operation
  /api/v1/deepfake_detector/user/setavatar:
     post:
      tags:
        - user
      summary: cập nhật ảnh đại diện
      description: người dùng đăng ảnh đại diện lên
      operationId: setavatar
      security:
      - Bearer: []  
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary

      responses:
        default:
          description: successful operation
  /api/v1/deepfake_detector/typefiles/{typeid}:
    patch:
      tags:
        - typefile
      summary: cập nhật giá cho img,void hoặc video
      description: admin sẽ cập nhật lại giá 
      operationId: updateprice
      parameters:
        - name: typeid
          in: path
          required: true
          schema:
            type: integer    
      security:
      - Bearer: []  
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                moneypay:
                  type: integer
                  example: 10000

      responses:
        default:
          description: successful operation
  /api/v1/deepfake_detector/typefiles:
    get: 
     tags:
        - typefile
     summary: Get All Types
     description: Chỉ admin mới có quền get all types
     operationId: getalltypes
     security:
      - Bearer: []
     responses:
        default:
          description: successful operation
  /api/v1/deepfake_detector/checkout:
    post:
      tags:
        - checkout
      summary: thanh toán
      description: người dùng nạp tiền vào tài khoản với 2 hình thức là vnpay hoặc bitcoin
      operationId: usercheckout
      security:
      - Bearer: []  
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_method:
                  type: string
                  example: bitcoin
                moneypay:
                  type: integer
                  example: 0.001
      responses:
        default:
          description: successful operation
    get: 
     tags:
        - checkout
     summary: Get all checkout
     description: Chỉ admin mới có quền get all checkout
     operationId: getallcheckout
     security:
      - Bearer: []
     responses:
        default:
          description: successful operation
  /api/v1/deepfake_detector/checkfile/image:
    post:
      tags:
        - checkfile
      summary: upload image
      description: người dùng upload image to check 
      operationId: uploadimage
      security:
      - Bearer: []  
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary

      responses:
        default:
          description: successful operation
  /api/v1/deepfake_detector/checkfile/void:
    post:
      tags:
        - checkfile
      summary: upload void
      description: người dùng upload void to check 
      operationId: uploadvoid
      security:
      - Bearer: []  
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                void:
                  type: string
                  format: binary

      responses:
        default:
          description: successful operation
  /api/v1/deepfake_detector/checkfile/video:
    post:
      tags:
        - checkfile
      summary: upload video
      description: người dùng upload video to check 
      operationId: uploadvideo
      security:
      - Bearer: []  
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                video:
                  type: string
                  format: binary

      responses:
        default:
          description: successful operation
  /api/v1/deepfake_detector/checkfile/user/history:
    get: 
     tags:
        - checkfile
     summary: User get file checked
     description: người dùng lấy được 10 file gần nhất mà đã upload lên
     operationId: userget10file
     security:
      - Bearer: []
     responses:
        default:
          description: successful operation
  /api/v1/deepfake_detector/vnpay/create_payment_url:
   get: 
     tags:
        - checkout
     summary: Vnpay
     description: người dùng thực hiện checkout bằng vnpay
     operationId: vnpay
     security:
      - Bearer: []
     responses:
        default:
          description: successful operation
  /api/v1/deepfake_detector/checkfile/download:
    post:
     tags:
        - checkfile
     summary: download file 
     description: user tải file đã checkout về
     operationId: downloadfile
     security:
      - Bearer: []
     requestBody:
       content:
          application/json:
            schema:
                    type: object
                    properties:
                     filePath:
                      type: string
                      example: filepath

     responses:
        default:
          description: successful operation
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Dogs
      xml:
        name: category
    User:
      type: object
      properties:
        name:
          type: string
          example: theUser
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
      xml:
        name: user
    UserLogin:
      type: object
      properties:
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
      xml:
        name: user
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: tag
    Pet:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: doggie
        category:
          $ref: '#/components/schemas/Category'
        photoUrls:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: photoUrl
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: pet
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Pet:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
  securitySchemes:
   Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: "Nhập mã thông báo với tiền tố 'Bearer: ', ví dụ: 'Bearer abcde12345'."
